async function p(i){var o;if(!("serviceWorker"in navigator)||!("PushManager"in window))return null;const r=/iphone|ipad|ipod/i.test(navigator.userAgent),n=((o=window.matchMedia)==null?void 0:o.call(window,"(display-mode: standalone)").matches)||navigator.standalone;if(r&&!n)return null;if(Notification.permission==="default"){if(await Notification.requestPermission()!=="granted")return null}else if(Notification.permission!=="granted")return null;const t=await navigator.serviceWorker.ready,e=await t.pushManager.getSubscription()??await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:l(i)});return await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(e)}),e}async function g(i){if(!("serviceWorker"in navigator)||!("PushManager"in window))return;const r=await navigator.serviceWorker.ready;let n=await r.pushManager.getSubscription();if(!n){if(Notification.permission!=="granted")return;const t=a=>{const e="=".repeat((4-a.length%4)%4),o=(a+e).replace(/-/g,"+").replace(/_/g,"/"),s=atob(o),u=new Uint8Array(s.length);for(let c=0;c<s.length;++c)u[c]=s.charCodeAt(c);return u};n=await r.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:t(i)})}await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(n)})}function l(i){const r="=".repeat((4-i.length%4)%4),n=(i+r).replace(/-/g,"+").replace(/_/g,"/"),t=atob(n),a=new Uint8Array(t.length);for(let e=0;e<t.length;++e)a[e]=t.charCodeAt(e);return a}export{p as autoEnableNotifications,g as ensureSubscriptionSynced};
